user www-data;
worker_processes 4;
pid /run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    sendfile off;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

     include /etc/nginx/mime.types;
  default_type application/octet-stream;

  map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream python_server {
        server localhost:8000;
    }
    upstream notebook {
        server localhost:8888;
    }
    
    server {
        listen 88;
        location / {
           proxy_pass http://python_server;
           proxy_set_header Host $host;
        }
    }
    server {
        listen 80;
        location / {
            proxy_pass http://notebook;
            proxy_set_header Host $host;
        }
        
        location ~* /(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With';
              
            if ($request_method = 'OPTIONS') {
                      return 204;
            }
            proxy_pass http://notebook;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

        }
    }
}